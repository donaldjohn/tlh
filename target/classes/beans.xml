<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd ">
		
    <!-- 组件扫描 -->
    <context:component-scan base-package="com.tlh.**.service.impl,com.tlh.system.listener"/>
    
    <!-- 分离配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    
    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
       <property name="driverClass" value="${jdbc.driver}"/>
    	<property name="jdbcUrl" value="${jdbc.url}"/>
    	<property name="user" value="${jdbc.username}"/>
    	<property name="password" value="${jdbc.password}"/>
    	<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}" />
		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize" value="${c3p0.minPoolSize}" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}" />
    </bean>
    
    <!-- 配置会话工厂 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- mybatis配置文件 -->
        <property name="configLocation" value="classpath:mybatis.xml"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- mapper扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.tlh.**.mapper"/>
    </bean>
    
    <!-- 配置事务管理 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <!-- 配置事务通知：声明式事务 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
	    <tx:attributes>
	        <tx:method name="save*" isolation="DEFAULT" propagation="REQUIRED"/>
	        <tx:method name="update*" isolation="DEFAULT" propagation="REQUIRED"/>
	        <tx:method name="delete*" isolation="DEFAULT" propagation="REQUIRED"/>
	        
	        <tx:method name="find*" isolation="DEFAULT" propagation="SUPPORTS" read-only="true"/>
	        <tx:method name="get*" isolation="DEFAULT" propagation="SUPPORTS" read-only="true"/>
	        
	        <tx:method name="*" isolation="DEFAULT" propagation="REQUIRED"/>
	    </tx:attributes>
	</tx:advice>
    
	<!-- 日志管理 -->
	<bean id="logger" class="com.tlh.system.action.advice.Logger">
	    <property name="logService" ref="logService"/>
	</bean>
	
	<!-- 配置事务切面 -->
	<aop:config>
	    <!-- aop切入点 -->
	    <aop:pointcut expression="execution(* *..*Service.*(..))" id="txPointCut"/>
     	<aop:pointcut expression="(execution(* *..*Service.save*(..))
        					or execution(* *..*Service.update*(..))
        					or execution(* *..*Service.delete*(..))) and !bean(logService)" id="logPointcut"/>
     	<!-- 增强：事务处理 -->
	    <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut" order="1"/>
	    <!-- 切面 -->
	    <aop:aspect id="loggerAspect" ref="logger" order="0">
	        <aop:around method="record" pointcut-ref="logPointcut"/>
	    </aop:aspect>
	</aop:config>
	
</beans>